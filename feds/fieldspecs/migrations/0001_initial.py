# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-10 20:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('anomalies', '0002_auto_20170810_2044'),
        ('businessareas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FieldSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of this field specification.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of this field specification.')),
                ('field_type', models.CharField(help_text='Field type', max_length=10)),
                ('field_spec_params', models.TextField(blank=True, help_text='Parameters for this field specification. JSON.')),
            ],
        ),
        migrations.CreateModel(
            name='NotionalTableMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_order', models.IntegerField(help_text='Order of the field in the notional table.')),
                ('field_spec', models.ForeignKey(help_text='Field in notional table.', on_delete=django.db.models.deletion.CASCADE, to='fieldspecs.FieldSpec')),
                ('notional_table', models.ForeignKey(help_text='Notional table the field is in.', on_delete=django.db.models.deletion.CASCADE, to='businessareas.NotionalTable')),
            ],
        ),
        migrations.CreateModel(
            name='PossibleFieldAnomaly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anomaly_params', models.TextField(blank=True, help_text='JSON parameters to initialize the anomaly.')),
                ('anomaly', models.ForeignKey(help_text='An anomaly the field can have .', on_delete=django.db.models.deletion.CASCADE, to='anomalies.Anomaly')),
                ('field_spec', models.ForeignKey(help_text='Field that can have an anomaly.', on_delete=django.db.models.deletion.CASCADE, to='fieldspecs.FieldSpec')),
            ],
        ),
        migrations.AddField(
            model_name='fieldspec',
            name='notional_tables',
            field=models.ManyToManyField(related_name='fieldspecs_fieldspec_related_notional_tables', through='fieldspecs.NotionalTableMembership', to='businessareas.NotionalTable'),
        ),
        migrations.AddField(
            model_name='fieldspec',
            name='possible_anomalies',
            field=models.ManyToManyField(help_text='Anomalies that this field specification can have.', related_name='possible_anomalies', through='fieldspecs.PossibleFieldAnomaly', to='anomalies.Anomaly'),
        ),
    ]
